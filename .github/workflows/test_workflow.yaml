name: 'Helm Charts Deployment'
on:
  workflow_dispatch:
    inputs:
      cluster_env:
        description: 'Cluster environment to deploy to'
        required: true
        type: choice
        options:
          - dev-eks-cluster
          - prod-eks-cluster
      namespace:
        description: 'Namespace to deploy to'
        required: true
        type: choice
        options:
          - falco
          - logtail
          - monitoring
      values_file:
        description: 'Path to the values file'
        required: true
        type: choice
        options:
          - ./_values/ops/grafana.yaml
          - ./_values/dev/falcosidekick.yaml
          - ./_values/dev/falco.yaml
      chartpath:
        description: 'Path to the Helm chart'
        required: true
        type: choice
        options:
          - ./_charts/falco
          - ./_charts/falcosidekick
          - ./_charts/grafana
      release_name:
        description: 'Release name for the Helm chart'
        required: true
        type: choice
        options:
          - falco
          - falcosidekick
          - grafana

jobs:
  Deployment:
    name: 'Helm Chart Deployment'
    runs-on: ubuntu-20.04
    steps:
      # Checkout in repo
      - name: Check Out in Charts repo
        uses: actions/checkout@v2.3.4
        # with:
        #   token: ${{ secrets.TOKEN }}
        # continue-on-error: true

      # Configure AWS Credentials
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # Deployment: we are using helm for deployment on Kubernetes
      - name: 'Helm Deployment'
        run: |
          aws eks --region eu-west-1 update-kubeconfig --name ${{ inputs.cluster_env }}
          export KUBECONFIG=~/.kube/config
          helm upgrade --install --atomic --namespace=${{ inputs.namespace }} -f ${{ inputs.values_file }} ${{ inputs.release_name }} ${{ inputs.chartpath }}
